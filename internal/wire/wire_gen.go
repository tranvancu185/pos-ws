// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"tranvancu185/vey-pos-ws/internal/controller"
	"tranvancu185/vey-pos-ws/internal/repo"
	"tranvancu185/vey-pos-ws/internal/service"
)

// Injectors from app.wire.go:

func InitAppRouterHandler() (*controller.AppController, error) {
	iAppRepo := repo.NewAppRepo()
	iAppService := service.NeuAppService(iAppRepo)
	appController := controller.NewAppController(iAppService)
	return appController, nil
}

// Injectors from auth.wire.go:

func InitAuthRouterHandler() (*controller.AuthController, error) {
	iAuthRepo := repo.NewAuthRepo()
	iUserRepo := repo.NewUserRepo()
	iAuthService := service.NeuAuthService(iAuthRepo, iUserRepo)
	authController := controller.NewAuthController(iAuthService)
	return authController, nil
}

// Injectors from category.wire.go:

func InitCategoryRouterHandler() (*controller.CategoryController, error) {
	iCategoryRepo := repo.NewCategoryRepo()
	iCategoryService := service.NewCategoryService(iCategoryRepo)
	categoryController := controller.NewCategoryController(iCategoryService)
	return categoryController, nil
}

// Injectors from customer.wire.go:

func InitCustomerRouterHandler() (*controller.CustomerController, error) {
	iCustomerRepo := repo.NewCustomerRepo()
	iCustomerService := service.NewCustomerService(iCustomerRepo)
	customerController := controller.NewCustomerController(iCustomerService)
	return customerController, nil
}

// Injectors from order.wire.go:

func InitOrderRouterHandler() (*controller.OrderController, error) {
	iOrderRepo := repo.NewOrderRepo()
	iOrderService := service.NewOrderService(iOrderRepo)
	orderController := controller.NewOrderController(iOrderService)
	return orderController, nil
}

// Injectors from payment.wire.go:

func InitPaymentRouterHandler() (*controller.PaymentController, error) {
	iPaymentRepo := repo.NewPaymentRepo()
	iPaymentService := service.NewPaymentService(iPaymentRepo)
	paymentController := controller.NewPaymentController(iPaymentService)
	return paymentController, nil
}

// Injectors from product.wire.go:

func InitProductRouterHandler() (*controller.ProductController, error) {
	iProductRepo := repo.NewProductRepo()
	iProductService := service.NewProductService(iProductRepo)
	productController := controller.NewProductController(iProductService)
	return productController, nil
}

// Injectors from table.wire.go:

func InitTableRouterHandler() (*controller.TableController, error) {
	iTableRepo := repo.NewTableRepo()
	iTableService := service.NewTableService(iTableRepo)
	tableController := controller.NewTableController(iTableService)
	return tableController, nil
}

// Injectors from user.wire.go:

func InitUserRouterHandler() (*controller.UserController, error) {
	iUserRepo := repo.NewUserRepo()
	iAuthRepo := repo.NewAuthRepo()
	iUserService := service.NewUserService(iUserRepo, iAuthRepo)
	userController := controller.NewUserController(iUserService)
	return userController, nil
}
